version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: facilita-porto-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: facilita_porto
      POSTGRES_USER: facilita_user
      POSTGRES_PASSWORD: facilita_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - facilita-network

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: facilita-porto-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - facilita-network

  # Elasticsearch for search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: facilita-porto-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - facilita-network

  # API Backend (Development)
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile.dev
    container_name: facilita-porto-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://facilita_user:facilita_password@postgres:5432/facilita_porto?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3000"
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - facilita-network

  # Web Admin Dashboard (Development)
  web-admin:
    build:
      context: ./apps/web-admin
      dockerfile: Dockerfile.dev
    container_name: facilita-porto-web
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/v1
    ports:
      - "3001:3001"
    volumes:
      - ./apps/web-admin:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - facilita-network

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: facilita-porto-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - facilita-network

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: facilita-porto-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/docker/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - facilita-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  facilita-network:
    driver: bridge
